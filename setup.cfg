[aliases]
test=pytest

[coverage:report]
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
    if __name__ == '__main__':

[flake8]
avoid-escape = False
docstring_convention = google
docstring_style = google
extend-select =
    # docstrings
    D204,
    D400,
    D401,
    D404,
    D413,
ignore =
    # do not enforce check error first
    SIM106,
    # allow line break after binary operator
    W504,
    #
    # TODO: do not check annotations for now
    ANN,
    # TODO: Missing docstrings ok for now
    D1,
    # TODO: rely on pylint line length check for now
    E501,
    # TODO: disable upcase variable check for now
    N806,
    # TODO: allow TODO for now
    T101,
max-line-length = 100
strictness = long
suppress-none-returning = True

[isort]
include_trailing_comma = True
line_length = 100
multi_line_output = 3
known_first_party =
    marv,
    marv_api,
    marv_cli,
    marv_detail,
    marv_node,
    marv_nodes,
    marv_pycapnp,
    marv_robotics,
    marv_ros,
    marv_store,
    marv_webapi,

[mypy]
ignore_missing_imports = True

[pydocstyle]
convention = google
add-select = D204,D400,D401,D404,D413

[pylint.MASTER]
max-line-length = 100
disable =
    duplicate-code,
    ungrouped-imports,
    #
    consider-using-f-string,
    cyclic-import,
    fixme,
    missing-class-docstring,
    missing-function-docstring,
    missing-module-docstring,
    raise-missing-from,
    redefined-builtin,
exclude-protected =
    _asdict,
    _meta,
    _table_name,
good-names =
    _,
    e,
    ep,
    f,
    fd,
    id,
    kw,
    log,
    np,
    pd,
    rv,
    ts
max-args = 6
ignored-modules =
    capnp.lib.capnp,
    cv2,
    marv_detail.types_capnp,
    marv_nodes.types_capnp,
    marv_pycapnp.types_capnp,
    pydantic,

[yapf]
based_on_style = google
column_limit = 100
allow_split_before_dict_value = false
dedent_closing_brackets = true
indent_dictionary_value = false

[tool:pytest]
addopts =
    -v
    --flake8
    --pylint
    --pylint-jobs=0
    --yapf
    --cov=code
    --cov-branch
    --cov-report=html
    --cov-report=term
    --no-cov-on-fail
    --ignore=docs/conf.py
    # exclude the symlinked tutorials
    --ignore-glob=docs/tutorial/**
    --ignore-glob='flycheck_*'
    --ignore-glob='**/flycheck_*'
    --junitxml=pytest-report.xml
junit_family = xunit2
markers =
    marv
    marv_conf
testpaths =
    code
    docs
    tutorial
